@model IEnumerable<Attendance.Models.Entities.CardLoginHistory>

@{
    ViewBag.Title = "فهرست ورودهای خارج نشده";

    Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
}

<h2>@ViewBag.Title</h2>
<div class="row">
    <br />
    <div class="form-group">
        @Html.LabelFor(modelItem => modelItem.FirstOrDefault().Card.Day, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select data-val="true" id="Card_Day" name="Card.Day">
                <option value="0">شنبه</option>
                <option value="1">یک شنبه</option>
                <option value="2">دوشنبه</option>
                <option value="3">سه شنبه</option>
                <option value="4">چهار شنبه</option>
                <option value="5">پنج شنبه</option>
                <option value="6">جمعه</option>
            </select>
            @Html.ValidationMessageFor(modelItem => modelItem.FirstOrDefault().Card.Day)
        </div>
    </div>  <br />
</div>
@(Html.Kendo().Grid(Model)
              .Name("Grid")
              .Columns(columns =>
                  {
                                    columns.Bound(model => model.Card.Code).Width(200);
        columns.Bound(item => @item.Id).Title("تاریخ ورود").Filterable(false).Groupable(false)
							.Template(@<text>
									@item.LoginDate.ToShamsi('s')
									</text>).Width(200);
                                    columns.Bound(model => model.Driver.FullName).Width(200);

	                  columns.Bound(item => @item.Id).Title("تاریخ خروج").Filterable(false).Groupable(false)
							.Template(@<text>
									@(item.ExitDate.ToShamsi().Equals("")?"خارج نشده":item.ExitDate.ToShamsi('s'))
									</text>).Width(200);
	    columns.Bound(item => @item.Id).Title("دستورات").Filterable(false).Groupable(false)
							.Template(@<text>
									@Html.ActionLink("جزییات", "LoginHistoryDetials","Cards", new {id = @item.Id}, new {@class = "k-button"})
									@Html.ActionLink("ثبت ورود و خروج پیاده", "index","WalkingLoginHistories", new {id = @item.Id}, new {@class = "k-button"})
							           </text>).Width(200);
		})
		.ToolBar(toolbar =>
					{

					}
		)        .Filterable().Sortable()
		.DataSource(dataSource => dataSource
									.Server()

									.Model(model => model.Id(item => item.Id))
					)
	)


@section scripts {
    <script>


        $(document).ready(function () {
              $("#Card_Day").val("@Html.Raw(ViewBag.day)").change();
        $('#Card_Day').on('change', function (e) {
            var optionSelected = $("option:selected", this);
            var valueSelected = this.value;
            document.location = "/CardLoginHistories/IndexNotExit?day=" + valueSelected;
        });
        })
    </script>
}