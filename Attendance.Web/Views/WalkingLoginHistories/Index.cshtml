@model IEnumerable<Attendance.Models.Entities.WalkingLoginHistory>

@{
		//ViewBag.Title = "تاریخچه ورود و خروج پیاده ";

		Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
}

<h2>@ViewBag.Title</h2>

        @(Html.Kendo().Grid(Model)
              .Name("Grid")
              .Columns(columns =>
                  {
                            columns.Bound(model => model.CardLoginHistory.Card.DisplayCode);
        columns.Bound(model => model.WalkingLoginHistoryTypeStr);
        columns.Bound(model => model.IsDriver);
        columns.Bound(model => model.IsDriverHelper);
        columns.Bound(model => model.IsActive);
        columns.Bound(model => model.CreationDate);
					columns.Bound(item => @item.Id).Title("دستورات").Filterable(false).Groupable(false)
							.Template(@<text>
									@Html.ActionLink("ویرایش", "Edit", new {id = @item.Id}, new {@class = "k-button"})
									@Html.ActionLink("حذف", "Delete", new {id = @item.Id}, new {@class = "k-button"})
									</text>).Width(200);
                  })
        .ToolBar(toolbar =>
        {
            toolbar.Custom().Action("Create","WalkingLoginHistories").Text("افزودن");
            toolbar.Custom().Action("Export", "WalkingLoginHistories").Text("خروجی اکسل");
        }
        )
                .Sortable(sortable => sortable.SortMode(GridSortMode.SingleColumn))
        .Filterable(filterable => filterable.Extra(false).Operators(o => o.ForString(fs => fs.StartsWith("شروع با").Contains("شامل")
          .EndsWith("اتمام با").IsEqualTo("برابر"))))
        .DataSource(dataSource => dataSource
                                    .Server()

                                    .Model(model => model.Id(item => item.Id))
                    )
    )
