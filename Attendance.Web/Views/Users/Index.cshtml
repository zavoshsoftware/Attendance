@model IEnumerable<Attendance.Models.Entities.User>

@{
    ViewBag.Title = "فهرست کاربران";

    Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
    string role = ((System.Security.Claims.ClaimsIdentity)User.Identity).FindFirst(System.Security.Claims.ClaimTypes.Role).Value;
}

<h2>@ViewBag.Title</h2>

@(Html.Kendo().Grid(Model)
                .Name("Grid")
                .Columns(columns =>
                {
                columns.Bound(model => model.Id).Title("ردیف");
                columns.Bound(model => model.CellNum);
                if (role == "SuperAdmin")
                {
                    columns.Bound(model => model.Password);
                }
                columns.Bound(model => model.FullName);
                columns.Bound(model => model.Email);
                columns.Bound(model => model.SecurityRole);
                columns.Bound(model => model.IsActive);
                columns.Bound(item => @item.CreationDate).Title("تاریخ").Filterable(false).Groupable(false)
                        .Template(@<text>	@item.CreationDate.ToShamsi('s')</text>).Width(200);
					columns.Bound(item => @item.Id).Title("دستورات").Filterable(false).Groupable(false)
							.Template(@<text>
									@Html.ActionLink("ویرایش", "Edit", new {id = @item.Id}, new {@class = "k-button"})
									@Html.ActionLink("حذف", "Delete", new {id = @item.Id}, new {@class = "k-button"})
									</text>).Width(200);
                })
        .ToolBar(toolbar =>
        {
            toolbar.Custom().Action("Create","Users").HtmlAttributes(new { @class = "font-medium" }).Text("افزودن");
            toolbar.Custom().Action("Export", "Users").HtmlAttributes(new { @class = "font-medium" }).Text("خروجی اکسل");
        }
        )
        .HtmlAttributes(new { id = "tbl" })
        .Sortable(sortable => sortable.SortMode(GridSortMode.SingleColumn))
        .Filterable(filterable => filterable.Extra(false).Operators(o => o.ForString(fs => fs.StartsWith("شروع با").Contains("شامل")

          .EndsWith("اتمام با").IsEqualTo("برابر"))))
        .DataSource(dataSource => dataSource
                                    .Server()

                                    .Model(model => model.Id(item => item.Id))
                    )
    )
<script>
    console.log($('#tbl'))
    //    .each(function () {
    //    console.log(this)
    //    //productlist.append({ "Id": $(this).find('td').eq(5).text(), "Amount": $(this).find('td').eq(1).text() });
    //    //$(this).find('td').eq(0).val()
    //});
    //$('#tbl > tbody  > tr').each(function (el)
    //{
    //    console.log(el)
    //});
    var counter = 1;
    $('#tbl tr').each(function (index,key) {
        if (index!= 0) {
            console.log($(this.cells)[0])
            $(this.cells)[0].innerText = counter
            counter = counter + 1;
        }
    });
</script>