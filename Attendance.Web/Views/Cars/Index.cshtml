@model IEnumerable<Attendance.Models.Entities.Car>
@using Attendance.Core.Enums;
@{
    ViewBag.Title = "فهرست خودروها";
    Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
    string role = ((System.Security.Claims.ClaimsIdentity)User.Identity).FindFirst(System.Security.Claims.ClaimTypes.Role).Value;
}

<h2>@ViewBag.Title</h2>

@(Html.Kendo().Grid(Model)
                    .Name("Grid")
                    .Columns(columns =>
                    {
                    columns.Bound(model => model.CarType.Title);
                    columns.Bound(model => model.CarType.Weight).Title("وزن(کیلوگرم)");
              //columns.Bound(model => model.Title);
              columns.Bound(model => model.Number);
                    columns.Bound(model => model.IsActive);
                    columns.Bound(item => @item.Id).Title("تاریخ").Filterable(false).Groupable(false)
                            .Template(@<text>	@item.CreationDate.ToShamsi('s')</text>).Width(200);
					columns.Bound(item => @item.Id).Title("دستورات").Filterable(false).Groupable(false)
							.Template(@<text>
									@Html.ActionLink("ویرایش", "Edit", new {id = @item.Id}, new {@class = "k-button"})
									@Html.ActionLink("حذف", "Delete", new {id = @item.Id}, new {@class = "k-button"})
<a class="k-button" href="/cars/status?id=@item.Id">@(item.IsActive?"غیرفعالسازی":"فعالسازی")</a>
									</text>).Width(200);
                  })
        .ToolBar(toolbar =>
        {
            toolbar.Custom().Action("Create","Cars").HtmlAttributes(new { @class = "font-medium" }).Text("افزودن");
            toolbar.Custom().Action("import","Cars").HtmlAttributes(new { @class = "font-medium" }).Text("افزودن اکسل ماشین ها");
            toolbar.Custom().Action("Export", "Cars").HtmlAttributes(new { @class = "font-medium" }).Text("خروجی اکسل");

        }
        )
        .Sortable(sortable => sortable.SortMode(GridSortMode.SingleColumn))
        .Filterable(filterable => filterable.Extra(false).Operators(o => o.ForString(fs => fs.StartsWith("شروع با").Contains("شامل")
          .EndsWith("اتمام با").IsEqualTo("برابر"))))
        .DataSource(dataSource => dataSource
                                    .Server()

                                    .Model(model => model.Id(item => item.Id))
                    )
	)
