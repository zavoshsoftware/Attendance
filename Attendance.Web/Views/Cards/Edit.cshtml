@model Attendance.Models.Entities.Card

@{
	ViewBag.Title = "ویرایش " + Server.HtmlDecode(Html.DisplayNameFor(model => model).ToString());
	Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Edit", "Cards", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<hr />
		@Html.ValidationSummary(true)
		@Html.HiddenFor(model => model.Id)

		<div class="form-group">
			@Html.LabelFor(model => model.Code, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Code)
				@Html.ValidationMessageFor(model => model.Code)
			</div>
		</div>


		<div class="form-group">
			@Html.LabelFor(model => model.DriverId, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<select id="DriverId" name="DriverId" class="accountSelect form-control input-group"></select>
				<label id="fullName"></label>

				@*@Html.DropDownList("DriverId", String.Empty)*@
				@Html.ValidationMessageFor(model => model.DriverId)
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Day, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EnumDropDownListFor(model => model.Day)
				@Html.ValidationMessageFor(model => model.Day)
			</div>
		</div>


		@if (User.Identity.IsAuthenticated)
		{
			var identity = (System.Security.Claims.ClaimsIdentity)User.Identity;
			string role = identity.FindFirst(System.Security.Claims.ClaimTypes.Role).Value;
			if (role == "SuperAdmin")
			{
				<div class="form-group">
					<div class="col-md-2">
					</div>
					<div class="col-md-10">
						@Html.EditorFor(model => model.IsHidden)
						@Html.ValidationMessageFor(model => model.IsHidden)
					</div>
				</div>
			}
		}
		<div class="form-group">
			@Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.IsActive)
				@Html.ValidationMessageFor(model => model.IsActive)
			</div>
		</div>

		@Html.HiddenFor(model => model.CreationDate)
		<div class="form-group">
			@Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Description)
				@Html.ValidationMessageFor(model => model.Description)
			</div>
		</div>


		<div class="form-group" id="buttons">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="ثبت" class="btn btn-primary" />
				@Html.ActionLink("بازگشت به فهرست", "Index")
			</div>
		</div>
	</div>
}

<script src="~/Scripts/select2.min.js"></script>

@section scripts
{
	<script>


		$(document).ready(function () {

			var selData = $(".accountSelect").select2({
				ajax: {
					url: '/cards/GetDriverNames',
					data: function (params) {
						return {
							q: params.term // search term
						};
					},
					processResults: function (data) {
						return {
							dropdownParent: $(".accountSelect"),
							results: $.map(data.items,
								function (obj) {
									return {
										id: obj.Id,
										text: obj.Text // <- this is what was done to fix the issue
									};
								})
						};
					},
					initSelection: function (element, callback) {
						var data = { id: element.val(), text: element.val() };
						callback(data);
					}
				}
			});


			$('.accountSelect').on("change", function (e) {
				var lastValue = e.currentTarget.value;
				var lastText = e.currentTarget.textContent;
				$.post("/Cards/GetUserInfo",
					{
						q: lastValue
					},
					function (data, status) {
						//alert("Data: " + data + "\nStatus: " + status);
						//console.log(data.Type, data.Weight)
						$('#fullName').html(data.FullName);
					});
			});
		});
	</script>
}
