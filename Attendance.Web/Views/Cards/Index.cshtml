@model IEnumerable<Attendance.Models.Entities.Card>
@using Attendance.Core.Enums
@{
    ViewBag.Title = "فهرست کارت ها";

    Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
    string role = ((System.Security.Claims.ClaimsIdentity)User.Identity).FindFirst(System.Security.Claims.ClaimTypes.Role).Value;
}



<h2>@ViewBag.Title</h2>

@if (Model != null && Model.Any())
{
<div class="card">


    @(Html.Kendo().Grid(Model)
     .Name("Grid")
     .Columns(columns =>
     {
     columns.Bound(model => model.Id).Title("ردیف");
     columns.Bound(model => model.DisplayCode);
     columns.Bound(item => @item.Driver.FirstName).Filterable(true).Groupable(false)
                   .Template(@<text>	@item.Driver.FirstName</text>);
       	columns.Bound(item => @item.Driver.LastName).Filterable(true).Groupable(false)
                      .Template(@<text>	@item.Driver.LastName</text>);
        columns.Bound(model => model.Driver.NationalCode); 
		columns.Bound(item => @item.DayStr).Title("روز").Filterable(true).Groupable(false)
                      .Template(@<text>	@item.DayStr</text>).Width(200);
        columns.Bound(model => model.IsActive);

        columns.Bound(item => @item.Id).Title("دستورات").Filterable(false).Groupable(false)
                      .Template(@<text>
                                    @if ((bool)ViewBag.IsDeleted)
                                    {
                                      @Html.ActionLink("فعال کن", "UseCard", new {id = @item.Id}, new {@class = "k-button"})
                                    }
                          else
                          {

									@Html.ActionLink("ویرایش", "Edit", new {id = @item.Id}, new {@class = "k-button"})
									@Html.ActionLink("حذف", "Delete", new {id = @item.Id}, new {@class = "k-button"})
									@Html.ActionLink("دسته بندی", "Group", new {id = @item.Id}, new {@class = "k-button"})
                                    <a class="k-button" href="/cards/status?id=@item.Id">@(item.IsActive?"غیرفعالسازی":"فعالسازی")</a>
									@Html.ActionLink("ورود و خروج", "Index", "CardLoginHistories", new { cardId = @item.Id}, new {@class = "k-button"})
									@Html.ActionLink("توقیفات", "Index", "penalties", new { cardId = @item.Id}, new {@class = "k-button"})
									@Html.ActionLink("تاریخچه رانندگان", "DriversHistory", "cards", new { cardId = @item.Id}, new {@class = "k-button"})
									@Html.ActionLink("تاریخچه فعال/غیرفعال", "index", "cardstatushistories", new { cardId = @item.Id}, new {@class = "k-button"})
									@Html.ActionLink("تردد پیاده", "index", "WalkingLoginHistories", new { cardId = @item.Id}, new {@class = "k-button"})
                          }
									@*@Html.ActionLink("تعیین روزهای مجاز", "Index","CardDays", new {id = @item.Id}, new {@class = "k-button"})*@
							           </text>).Width(200);
        })
        .ToolBar(toolbar =>
        {
            toolbar.Custom().Action("Create","Cards")
             .HtmlAttributes(new { @class = "font-medium" })
            .Text("افزودن");
            toolbar.Custom().Action("Export", "cards").HtmlAttributes(new { @class = "font-medium" }).Text("خروجی اکسل");
            if (role == SecurityRole.SuperAdmin || role == SecurityRole.Admin)
            {
                toolbar.Custom().Action("Index", "cardStatusHistories").HtmlAttributes(new { @class = "font-medium" }).Text("تاریخچه فعال/غیرفعال");
            }
        }
        )
        .HtmlAttributes(new { id = "tbl" })
        .Filterable(filterable => filterable.Extra(false).Operators(o=>o.ForString(fs=>fs.StartsWith("شروع با").Contains("شامل")
        .EndsWith("اتمام با").IsEqualTo("برابر"))))
        .DataSource(dataSource => dataSource
                                    .Server()

                                    .Model(model => model.Id(item => item.Id))
                    ).Sortable(/*sortable => sortable.SortMode(GridSortMode.SingleColumn)*/)
        .Pageable()
    )
</div>
}
<script>
    console.log($('#tbl'))
    var counter = 1;
    $('#tbl tr').each(function (index, key) {
        if (index != 0) {
            console.log($(this.cells)[0])
            $(this.cells)[0].innerText = counter
            counter = counter + 1;
        }
    });
</script>