@model IEnumerable<Attendance.Models.Entities.Driver>
@using Attendance.Core.Enums;
@{
    ViewBag.Title = "فهرست رانندگان";

    Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
    string role = ((System.Security.Claims.ClaimsIdentity)User.Identity).FindFirst(System.Security.Claims.ClaimTypes.Role).Value;
}

<h2>@ViewBag.Title</h2>

@(Html.Kendo().Grid(Model)
              .Name("Grid")
              .Columns(columns =>
                  {
        columns.Bound(model => model.FirstName);
        columns.Bound(model => model.LastName);
        columns.Bound(model => model.NationalCode);
        columns.Bound(model => model.CellNumber);
        columns.Bound(model => model.IsActive);
        columns.Bound(item => @item.DriverType).Filterable(false).Groupable(false)
                      .Template(@<text>	@item.DriverType.GetDisplayName()</text>);
        columns.Bound(item => @item.Id).Title("تاریخ").Filterable(false).Groupable(false)
                      .Template(@<text>	@item.CreationDate.ToShamsi('s')</text>).Width(200);
					columns.Bound(item => @item.Id).Title("دستورات").Filterable(false).Groupable(false)
							.Template(@<text>
									@Html.ActionLink("ویرایش", "Edit", new {id = @item.Id}, new {@class = "k-button"})
									@Html.ActionLink("حذف", "Delete", new {id = @item.Id}, new {@class = "k-button"})
									@Html.ActionLink("جزئیات", "details", new {id = @item.Id}, new {@class = "k-button"})
 <a class="k-button" href="/drivers/status?id=@item.Id">@(item.IsActive?"غیرفعالسازی":"فعالسازی")</a>
									@Html.ActionLink("توقیفات", "index", "Penalties", new {driverId = @item.Id}, new {@class = "k-button"})
@Html.ActionLink("ورود و خروج", "Index", "CardLoginHistories", new { driverId = @item.Id}, new {@class = "k-button"})
									</text>).Width(200);
                  })
        .ToolBar(toolbar =>
        {
            toolbar.Custom().Action("Create","Drivers").HtmlAttributes(new { @class = "font-medium" }).Text("افزودن");
            toolbar.Custom().Action("import","Drivers").HtmlAttributes(new { @class = "font-medium" }).Text("بارگذاری اکسل");
            toolbar.Custom().Action("Export", "Drivers").HtmlAttributes(new { @class = "font-medium" }).Text("خروجی اکسل");
            if (role == SecurityRole.SuperAdmin)
            {
                toolbar.Custom().Action("Index", "DriverStatusHistories").HtmlAttributes(new { @class = "font-medium" }).Text("تاریخچه فعال/غیرفعال");
            }
        }
        )
        .Sortable(sortable => sortable.SortMode(GridSortMode.SingleColumn))
        .Filterable(filterable => filterable.Extra(false).Operators(o => o.ForString(fs => fs.StartsWith("شروع با").Contains("شامل")
          .EndsWith("اتمام با").IsEqualTo("برابر"))))
        .DataSource(dataSource => dataSource
                                    .Server()

                                    .Model(model => model.Id(item => item.Id))
                    )
	)
