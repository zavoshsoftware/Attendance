@model Attendance.Models.Entities.Driver

@{ 
    Layout = null;
}
<div class="row"> 
    @using (Html.BeginForm("CreatePartial", "Drivers", FormMethod.Post, new { enctype = "multipart/form-data" , id = "driverForm" }))
    { 
        <div class="form-horizontal">
            @Html.ValidationSummary(true)

            <div class="form-group">
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName)

                        @Html.ValidationMessageFor(model => model.FirstName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName)

                        @Html.ValidationMessageFor(model => model.LastName)
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BirthDate, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" id="BirthDateShamsi" class="k-textbox" name="BirthDateShamsi"
                           onclick="PersianDatePicker.Show(this,'@DateTime.Now.ToShamsi('a')');" />
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Father, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Father)

                    @Html.ValidationMessageFor(model => model.Father)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NationalCode, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NationalCode)
                    @Html.ValidationMessageFor(model => model.NationalCode)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CellNumber, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CellNumber)

                    @Html.ValidationMessageFor(model => model.CellNumber)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DriverType, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.DriverType)

                    @Html.ValidationMessageFor(model => model.DriverType)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IsActive)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" , @rows = "2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description)

                    @Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>
            <div class="form-group" id="buttons">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" value="ایجاد" id="submitDriver" class="btn btn-primary" /> 
                </div>
            </div>
        </div>
    }



</div>

<script>
    $("#submitDriver").click(function (e) {

        e.preventDefault(); // avoid to execute the actual submit of the form.

        var form = $('#driverForm');
        var actionUrl = form.attr('action');

        $.ajax({
            type: "POST",
            url: actionUrl,
            data: form.serialize(), // serializes the form's elements.
            success: function (data) {
                console.log(data); // show response from the php script.
                if (data.status === true) {
                    var selData = $(".DriverSelect").select2({
                        ajax: {
                            url: '/cards/GetDriverList',
                            data: function (params) {
                                return {
                                    q: params.term// search term
                                };
                            },
                            processResults: function (data) {
                                return {
                                    dropdownParent: $(".DriverSelect"),
                                    results: $.map(data.items, function (obj) {
                                        return {
                                            id: obj.Id, text: obj.Text // <- this is what was done to fix the issue
                                        };
                                    })
                                };
                            },
                            initSelection: function (element, callback) {
                                var data = { id: element.val(), text: element.val() };
                                callback(data);
                            }
                        }
                    }); 
                    $.get("/Drivers/CreatePartial" , function (data) {
                        //alert('ورود به سیستم')
                        $('#modalBody').html(data)

                    });
                    toastr["success"](data.message)
                    $('#modalClose').click();
                }
                else {
                    toastr["danger"](data.message)
                }
            }
        }); 
    });
</script>